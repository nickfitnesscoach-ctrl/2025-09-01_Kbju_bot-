from aiogram import Router
from aiogram.filters import Command, Filter
from aiogram.types import Message

from app.database.requests import get_hot_leads

admin = Router()


class Admin(Filter):
    def __init__(self):
        self.admins = [310151740]  # –í–∞—à Telegram ID

    async def __call__(self, message: Message):
        return message.from_user.id in self.admins
    

@admin.message(Admin(), Command('admin'))
async def cmd_start(message: Message):
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!')


@admin.message(Admin(), Command('leads'))
async def cmd_hot_leads(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–æ—Ä—è—á–∏–µ –ª–∏–¥—ã –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É"""
    hot_leads = await get_hot_leads()
    
    if not hot_leads:
        await message.answer("üìà <b>–ì–æ—Ä—è—á–∏—Ö –ª–∏–¥–æ–≤ –Ω–µ—Ç</b>", parse_mode='HTML')
        return
    
    leads_text = "üî• <b>–ì–æ—Ä—è—á–∏–µ –ª–∏–¥—ã (–ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É):</b>\n\n"
    
    for i, lead in enumerate(hot_leads[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-10
        priority_icon = "üéÜ" if lead.priority_score >= 100 else "üî•" if lead.priority_score >= 80 else "üü†"
        username_text = f"@{lead.username}" if lead.username else "–Ω–µ—Ç username"
        
        leads_text += f"{priority_icon} <b>{i}. {lead.first_name or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</b>\n"
        leads_text += f"üÜî ID: <code>{lead.tg_id}</code>\n"
        leads_text += f"üí¨ {username_text}\n"
        leads_text += f"üèÜ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {lead.priority_score}\n"
        leads_text += f"üìà –°—Ç–∞—Ç—É—Å: {lead.funnel_status}\n"
        if lead.priority:
            leads_text += f"üé® –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {lead.priority}\n"
        leads_text += f"üïì {lead.updated_at.strftime('%d.%m %H:%M')}\n\n"
    
    if len(hot_leads) > 10:
        leads_text += f"‚Ä¶ –∏ –µ—â—ë {len(hot_leads) - 10} –ª–∏–¥–æ–≤"
    
    await message.answer(leads_text, parse_mode='HTML')
